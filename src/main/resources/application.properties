spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka
spring.kafka.consumer.enable-auto-commit=true
auto.commit.interval.ms=8000
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.properties.schema.registry.url=${REGISTRY_URL}
campaign=${KAFKA_CAMPAIGN_TOPIC}
outbound=${KAFKA_OUTBOUND_TOPIC}
telemetry=${KAFKA_TELEMETRY_TOPIC}
odk-topic-pattern=${KAFKA_ODK_TRANSFORMER_TOPIC_PATTERN}
processOutbound=${KAFKA_PROCESS_OUTBOUND}
generic-transformer=${KAFKA_GENERIC_TRANSFORMER_TOPIC:#{"generic-transformer"}}


spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.r2dbc.initialization-mode=always

spring.r2dbc.url=r2dbc:${FORMS_DB_URL}
postgresql.db.host=${FORMS_DB_HOST}
postgresql.db.port=${FORMS_DB_PORT}
spring.r2dbc.name=${FORMS_DB_NAME}
spring.r2dbc.username=${FORMS_DB_USERNAME}
spring.r2dbc.password=${FORMS_DB_PASSWORD}

#liquibase configuration
spring.liquibase.change-log=classpath:db/changelog-master.xml
spring.liquibase.enabled=true
spring.liquibase.user=${FORMS_DB_USERNAME}
spring.liquibase.password=${FORMS_DB_PASSWORD}
spring.liquibase.url=jdbc:postgresql://${FORMS_DB_HOST}:${FORMS_DB_PORT}/${FORMS_DB_NAME}

server.port=9091

provider.list=gupshup.whatsapp

db-scheduler.threads=5
db-scheduler.polling-interval=5s

external.services.url-shortnr.baseURL=http://localhost:8888
campaign.url = ${CAMPAIGN_URL}
campaign.admin.token = ${CAMPAIGN_ADMIN_TOKEN}

fusionauth.url = ${FUSIONAUTH_URL}
fusionauth.key = ${FUSIONAUTH_KEY}


odk.username = ${ODK_USER}
odk.password = ${ODK_PASS}
odk.url = ${ODK_URL}

producer.id=transformer
logging.level.root=INFO

odk.should-add-media = true

# log4j2 log topic config
kafka.logs.topic=${KAFKA_LOGS_TOPIC}

spring.devtools.restart.enabled = false

#Caffeine Cache
caffeine.cache.max.size=${CAFFEINE_CACHE_MAX_SIZE:#{1000}}
#caffeine.cache.max.size=0
caffeine.cache.exprie.duration.seconds=${CAFFEINE_CACHE_EXPIRE_DURATION:#{300}}

# assesment answer comparison characters
assesment.character.go_to_start=${ASSESSMENT_GO_TO_START_CHAR:#{*}}


# Cassandra
spring.data.cassandra.contactpoints=${CASSANDRA_URL}
spring.data.cassandra.port=${CASSANDRA_PORT}
spring.data.cassandra.keyspace-name=${CASSANDRA_KEYSPACE}
spring.data.cassandra.local-datacenter=datacenter1
spring.data.cassandra.request.timeout=120000
spring.data.cassandra.connect-timeout-millis=10000
spring.data.cassandra.read-timeout-millis=10000
spring.data.cassandra.connect-timeout=10000
spring.data.cassandra.read-timeout=10000
spring.data.cassandra.pool.heartbeat-interval=30s
spring.data.cassandra.pool.max-queue-size=2000
spring.data.cassandra.pool.idle-timeout=30s
spring.data.cassandra.pool.pool-timeout=30s
spring.data.cassandra.advanced.control-connection.timeout=10s
spring.data.cassandra.advanced.metadata.schema.request-timeout=30s
spring.data.cassandra.basic.request.timeout=30s

telemetry.event.pdata.id=${TELEMETRY_EVENT_PDATA_ID:#{prod.uci.diksha}}

#Redis
spring.redis.db=${REDIS_DB_INDEX:#{1}}
spring.redis.host=${REDIS_HOST:#{"localhost"}}
spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.number.port=${REDIS_NUMBER_PORT:#{6379}}
spring.redis.sentinel.master= # Name of Redis server.
spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
spring.redis.timeout=0
# This time in seconds and we are default set 60*60 = 3600 -> 1 Hour
redis.key.timeout=${REDIS_KEY_TIMEOUT:#{3600}}

#Env
spring.profile.env=${ENV}

#CDN Minio
cdn.minio.login.id=${CDN_MINIO_LOGIN_ID:#{"loginId"}}
cdn.minio.password=${CDN_MINIO_PASS:#{"pass"}}
cdn.minio.application.id=${CDN_MINIO_APP_ID:#{"2011a6c9-7fb7-4306-8c6d-c96cb07c7812"}}
cdn.minio.bucket.id=${CDN_MINIO_BUCKET_ID:#{"bucketId"}}
cdn.minio.url=${CDN_MINIO_URL:#{"https://cdn.example.io/"}}
cdn.minio.fa.key=${CDN_MINIO_FA_KEY:#{"https://fa.example.io/"}}
cdn.minio.fa.url=${CDN_MINIO_FA_URL:#{"fakey"}}

#Azure Storage
spring.azure.blob.store.account.name=${AZURE_BLOB_STORE_ACCOUNT_NAME:#{"name"}}
spring.azure.blob.store.account.key=${AZURE_BLOB_STORE_ACCOUNT_KEY:#{"key"}}
spring.azure.blob.store.container.name=${AZURE_BLOB_STORE_CONTAINER:#{"container"}}

#Selected media cdn


#Telemetry Event
exhaust.telemetry.enabled=${EXHAUST_TELEMETRY_ENABLED}
#Posthog Event
posthog.event.enabled=${POSTHOG_EVENT_ENABLED}

#sunbird media config
sunbird.cloud.media.storage.type=${SUNBIRD_CLOUD_MEDIA_STORAGE_TYPE:#{""}}
sunbird.cloud.media.storage.key=${SUNBIRD_CLOUD_MEDIA_STORAGE_KEY:#{""}}
sunbird.cloud.media.storage.secret=${SUNBIRD_CLOUD_MEDIA_STORAGE_SECRET:#{""}}
sunbird.cloud.media.storage.url=${SUNBIRD_CLOUD_MEDIA_STORAGE_URL:#{""}}
sunbird.cloud.media.storage.container=${SUNBIRD_CLOUD_MEDIA_STORAGE_CONTAINER:#{""}}


#doubtnut url
doubtnut.baseurl=${DOUBTNUT_BASE_URL:#{""}}
doubtnut.apikey=${DOUBTNUT_AUTH_KEY:#{""}}
doubtnut.welcome.msg=${DOUBTNUT_WELCOME_MSG:#{""}}
doubtnut.welcome.video=${DOUBTNUT_WELCOME_VIDEO:#{""}}


#nl app url
nlapp.userurl=${NLAPP_USER_URL:#{""}}
nlapp.userauth=${NLAPP_USER_AUTH:#{""}}
nlapp.user.xappid=${NLAPP_USER_XAPPID:#{""}}


# Email Config
spring.mail.host=${EMAIL_HOST:#{""}}
spring.mail.port=${EMAIL_PORT:#{"587"}}
spring.mail.username=${EMAIL_USERNAME:#{""}}
spring.mail.password=${EMAIL_PASSWORD:#{""}}
spring.mail.recipient=${RECIPIENT_EMAILS:#{""}}

# BotService WebClient Configurations
webclient.interval=${WEBCLIENT_INTERVAL:#{5000}}
webclient.retryMaxAttempts=${WEBCLIENT_RETRY_MAX_ATTEMPTS:#{3}}
webclient.retryMinBackoff=${WEBCLIENT_RETRY_MIN_BACK_OFF:#{5}}
